// Code generated by protoc-gen-go-errors. DO NOT EDIT.

package xerr

import (
	fmt "fmt"
	errors "github.com/go-kratos/kratos/v2/errors"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the kratos package it is being compiled against.
const _ = errors.SupportPackageIsVersion1

// 鉴权错误包括:token错误、token过期、token无效、无权限访问等
func IsAuth(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == Reason_AUTH.String() && e.Code == 401
}

// 鉴权错误包括:token错误、token过期、token无效、无权限访问等
func ErrorAuth(format string, args ...interface{}) *errors.Error {
	return errors.New(401, Reason_AUTH.String(), fmt.Sprintf(format, args...))
}

// 数据操作错误包括:数据不存在、数据已存在、数据已删除等
func IsDbOption(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == Reason_DB_OPTION.String() && e.Code == 403
}

// 数据操作错误包括:数据不存在、数据已存在、数据已删除等
func ErrorDbOption(format string, args ...interface{}) *errors.Error {
	return errors.New(403, Reason_DB_OPTION.String(), fmt.Sprintf(format, args...))
}
